group 'de.w11k.jsr308'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'

mainClassName = "de.w11k.jsr308.examples.TaintedSample"
//mainClassName = "de.w11k.jsr308.examples.InterningSample"


configurations {
    checkerFrameworkAnnotatedJDK {
        description = 'a copy of JDK classes with Checker Framework type qualifers inserted'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'

    checkerFrameworkAnnotatedJDK  "org.checkerframework:${jdkVersion}:${checkerFrameworkVersion}"

    compileOnly "org.checkerframework:checker:${checkerFrameworkVersion}"
    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"

    compileOnly project(":checkers")
    compile project(":annotations")
    compile "com.google.guava:guava:19.0"
    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
}

compileJava {
    options.encoding = 'UTF-8'

    // different syntax
//    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

    options.compilerArgs += [
        // debugging the processor/compiler itself
        // '-J-Xdebug -J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000',

        // if needed, in this case, the checkers are activated by including our own checkers project
        // see META-INF/services/javax.annotation.processing.Processor
        //  '-processor', 'org.checkerframework.checker.nullness.NullnessChecker,org.checkerframework.checker.units.UnitsChecker',
        //  '-processor', 'org.checkerframework.checker.tainting.TaintingChecker',

        // gradle compile plugin, bit if needed:
        //  '-processorpath', "${configurations.checkerFramework.asPath}",

        // print only warnings instead of compile errors
        //  '-Awarns' ,

        // following defines a custom type hierarchy
        '-Aquals=de.w11k.jsr308.checkers.encrypt.Encrypted,de.w11k.jsr308.checkers.encrypt.PossiblyUnencrypted,de.w11k.jsr308.checkers.encrypt.PolyEncrypted', //,de.w11k.jsr308.checkers.fenum.States,de.w11k.jsr308.checkers.fenum.Level',

        // this is quite usefull
        '-AprintErrorStack',

        // this is needed for the type annotated JDK
        "-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}"
    ]
}
